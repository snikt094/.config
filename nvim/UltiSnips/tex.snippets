global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

endglobal

snippet template "Basic template" bA 
\documentclass[a4paper]{article}
\usepackage{tcolorbox}
\usepackage{amsmath, amssymb}

\title{$1} 
\author{Shawhin Niktash}
\date{\today}

\begin{document}
	\maketitle

	$0
\end{document}
endsnippet

snippet xa "basic question template" bA 
\begin{tcolorbox} [title = Question $1] 
	$2 
\end{tcolorbox}
$0
endsnippet

snippet beg "begin{} / end{}" bA
\begin{$1} $2
	$0 
\end{$1}
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA 
\[
$1
.\] $0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
.\end{align*}
endsnippet

snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet se "^3" iA
^3
endsnippet

context "math()"
snippet st "superscript" iA
^{$1}$0
endsnippet

context "math()"
snippet pi "pi" iA
\pi $0
endsnippet


priority 10
context "math()"
snippet ba "bar" iA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet '([a-zA-Z])ba' "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

context "math()"
snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
snippet sum "sum" wA
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0 
\end{itemize}
endsnippet


context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} $0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet


context "math()"
snippet | "big pipe for integral" iA
\Big|_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}}$0
endsnippet

context "math()"
snippet dot "cdot" iA
\cdot 
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet
